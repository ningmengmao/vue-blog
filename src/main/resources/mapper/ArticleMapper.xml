<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ningmeng.vueblog.mapper.ArticleMapper">
    <resultMap id="base_article" type="com.ningmeng.vueblog.entity.Article">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="abstract" property="articleAbstract"/>
        <result column="content" property="content"/>
        <result column="views" property="views"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="is_top" property="isTop" javaType="boolean"/>
    </resultMap>

    <resultMap id="article" type="com.ningmeng.vueblog.entity.Article" extends="base_article">
        <collection property="commentSet" ofType="com.ningmeng.vueblog.entity.Comment"
                    select="com.ningmeng.vueblog.mapper.CommentMapper.selectByArticleId" column="id">
        </collection>

        <collection property="tagSet" ofType="com.ningmeng.vueblog.entity.Tag"
                    select="com.ningmeng.vueblog.mapper.TagMapper.selectByArticleId" column="id">
        </collection>
    </resultMap>


    <sql id="base_sql">
        id, title, abstract, content, views, create_time, update_time, is_top
    </sql>

    <sql id="view_sql">
        article_id, article_title, article_abstarct, article_content, article_views, article_update_time, article_create_time,
        article_is_top, tag_id, tag_name
    </sql>

    <sql id="my_select">
        select ba.id id, ba.title title, ba.abstract abstract, ba.content content, ba.views views,
            ba.create_time create_time, ba.update_time update_time, ba.is_top is_top,
            bc.id comment_id, bat.tag_id tag_id
        from b_article as ba
        left outer join b_comment as bc on ba.id = bc.article_id
        left outer join b_article_tag as bat on ba.id = bat.article_id
    </sql>

    <select id="selectByArticleId" resultMap="article">
        select <include refid="base_sql"></include>
        from b_article
        where id = #{id}
    </select>

    <select id="selectPageByTagId" resultMap="article">
        select id, title, abstract, content, views, create_time, update_time, is_top
        from b_article
        where id in (
            select article_id
            from b_article_tag
            where tag_id = #{tagId}
        )
        order by create_time desc
        limit #{start}, #{pageSize}
    </select>

    <select id="findByUpdateTimeBetween" resultMap="article">
        select <include refid="base_sql"></include>
        from b_article
        where update_time between #{begin} and #{end}
        order by update_time desc
    </select>

    <select id="findByCreateTimeBetween" resultMap="article">
        select <include refid="base_sql"></include>
        from b_article
        where create_time between #{begin} and #{end}
        order by create_time desc
    </select>

    <select id="selectByPage" resultMap="article">
        select <include refid="base_sql"></include>
        from b_article
        order by update_time desc
    </select>

    <select id="getByMostComment" resultMap="base_article">
        select <include refid="base_sql"></include>
        from b_article
        where id in (
            select t.article_id from (
                select article_id, count(article_id) coun
                from b_comment
                group by article_id
                order by coun limit 4
                ) as t
        )
    </select>

    <select id="getByMostView" resultMap="base_article">
        select <include refid="base_sql"></include>
        from b_article
        order by views desc limit 4;
    </select>

    <select id="lastArticleId" resultType="int">
        select id
        from b_article
        order by id desc limit 1
    </select>

    <select id="getViewsTotal" resultType="int">
        select sum(views)
        from b_article
    </select>

    <select id="selectIds" resultType="int">
        select id
        from b_article
    </select>

    <select id="findByTagIdTotal" resultType="int">
        select count(*)
        from b_article
        where b_article.id in (
            select article_id
            from b_article_tag
            where tag_id = #{tag_id}
        )
    </select>

    <delete id="deleteByArticleId">

    </delete>


<!--    <resultMap id="base_view_article" type="com.ningmeng.vueblog.entity.Article">-->
<!--        <id column="article_id" property="id"/>-->
<!--        <result column="article_title" property="title"/>-->
<!--        <result column="article_abstarct" property="articleAbstract"/>-->
<!--        <result column="article_content" property="content"/>-->
<!--        <result column="article_views" property="views"/>-->
<!--        <result column="article_create_time" property="createTime"/>-->
<!--        <result column="article_update_time" property="updateTime"/>-->
<!--        <result column="article_is_top" property="isTop" javaType="boolean"/>-->
<!--    </resultMap>-->

<!--    <resultMap id="views_article" type="com.ningmeng.vueblog.entity.Article" extends="base_view_article">-->
<!--        <collection property="commentSet" ofType="com.ningmeng.vueblog.entity.Comment"-->
<!--                    select="com.ningmeng.vueblog.mapper.CommentMapper.selectByArticleId" column="article_id">-->
<!--        </collection>-->
<!--        <collection property="tagSet" ofType="com.ningmeng.vueblog.entity.Tag">-->
<!--            <id column="tag_id" property="id"/>-->
<!--            <result column="tag_name" property="tagName"/>-->
<!--        </collection>-->
<!--    </resultMap>-->

<!--    <resultMap id="article" type="com.ningmeng.vueblog.entity.Article" extends="baseArticle">-->
<!--        <collection property="commentSet" ofType="com.ningmeng.vueblog.entity.Comment"-->
<!--                    select="com.ningmeng.vueblog.mapper.CommentMapper.selectByArticleId" column="id">-->
<!--        </collection>-->
<!--        <collection property="tagSet" ofType="com.ningmeng.vueblog.entity.Tag"-->
<!--                    select="com.ningmeng.vueblog.mapper.TagMapper.selectByArticleId" column="id">-->
<!--        </collection>-->
<!--    </resultMap>-->

    <select id="selectByTagId" resultMap="base_article">
        select *
        from b_article
        where b_article.id in (
            select article_id
            from b_article_tag
            where tag_id = #{tag_id}
        )
    </select>

<!--    <select id="selectByArticleId" resultMap="article">-->
<!--        select * from b_article where id = #{id}-->
<!--    </select>-->






</mapper>